# Enable wake on lan integration
wake_on_lan:

switch:
  # Computer Thijs
  - name: Computer Thijs wake on lan
    platform: wake_on_lan
    mac: "74:d0:2b:7f:57:aa"
    host: "10.0.100.1"
    broadcast_address: "10.0.100.1"
    turn_off:
      # Go to sleep instead of doing an actual shutdown
      service: mqtt.publish
      data:
        topic: "iotlink/workgroup/nlthijs48/commands/suspend"
        payload: ""
  # Computer Frits
  - name: Computer Frits wake on lan
    platform: wake_on_lan
    mac: "04:d9:f5:cd:a9:cd"
    host: "10.0.100.2"
    broadcast_address: "10.0.100.2"

homeassistant:
  customize:
    switch.computer_thijs_wake_on_lan:
      icon: mdi:desktop-tower-monitor
    switch.computer_frits_wake_on_lan:
      icon: mdi:desktop-tower-monitor

script:
  # Wake my computer
  computer_thijs_wake:
    alias: "Computer Thijs: wake up"
    sequence:
      - service: wake_on_lan.send_magic_packet
        data:
          mac: "74:d0:2b:7f:57:aa"
          broadcast_address: "10.0.100.1"
  # iotlink notification test
  computer_thijs_notify:
    alias: "Computer Thijs: notification"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/nlthijs48/commands/notify"
          payload: '{ "title": "My Notification Title", "message": "This is an example of notification using IOT Link", "launchParams": "toast://open/https://iotlink.gitlab.io" }'
  # Put to sleep
  computer_thijs_suspend:
    alias: "Computer Thijs: sleep"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/nlthijs48/commands/suspend"
          payload: ""
